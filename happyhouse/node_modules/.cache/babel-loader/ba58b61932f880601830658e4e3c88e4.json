{"remainingRequest":"/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/node_modules/babel-loader/lib/index.js!/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/src/components/board/QnABoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/src/components/board/QnABoard.vue","mtime":1592122008447},{"path":"/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/node_modules/cache-loader/dist/cjs.js","mtime":1592122001675},{"path":"/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/node_modules/babel-loader/lib/index.js","mtime":1592122001082},{"path":"/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/node_modules/vuetify-loader/lib/loader.js","mtime":1592122007534},{"path":"/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/node_modules/cache-loader/dist/cjs.js","mtime":1592122001675},{"path":"/Users/jay/dev/ssafyJSPlike/SsafyFinalThroughProject/happyhouse/node_modules/vue-loader/lib/index.js","mtime":1592122007435}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9qYXkvZGV2L3NzYWZ5SlNQbGlrZS9Tc2FmeUZpbmFsVGhyb3VnaFByb2plY3QvaGFwcHlob3VzZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwppbXBvcnQgX2RhdGEgZnJvbSAnQC9kYXRhJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdRbkFCb2FyZCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBjb250ZW50SXRlbXMgPSBfZGF0YS5Db250ZW50LnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgcmV0dXJuIGIuY29udGVudF9pZCAtIGEuY29udGVudF9pZDsKICAgIH0pOyAvLyDrgrTrprzssKjsiJwKICAgIC8vIFVzZXIg7JmAIENvbnRlbnQg7J2YIHVzZXJfaWQg7J2YIOqwmeydgCDrsojtmLjrpbwg7LC+7JWEIENvbnRlbnQg7JeQIOq4sOyhtOyekOujjCArICd1c2VyX25hbWUnIOycvOuhnCDstpTqsIDtlZzri6QuCgoKICAgIHZhciBpdGVtcyA9IGNvbnRlbnRJdGVtcy5tYXAoZnVuY3Rpb24gKGNvbnRlbnRJdGVtKSB7CiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGNvbnRlbnRJdGVtKSwge30sIHsKICAgICAgICB1c2VyX25hbWU6IF9kYXRhLlVzZXIuZmlsdGVyKGZ1bmN0aW9uICh1c2VySXRlbSkgewogICAgICAgICAgcmV0dXJuIGNvbnRlbnRJdGVtLnVzZXJfaWQgPT09IHVzZXJJdGVtLnVzZXJfaWQ7CiAgICAgICAgfSlbMF0ubmFtZQogICAgICB9KTsKICAgIH0pOwogICAgcmV0dXJuIHsKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIC8vIO2YhOyerCDtjpjsnbTsp4AKICAgICAgcGVyUGFnZTogMTAsCiAgICAgIC8vIO2OmOydtOyngOuLuSDrs7Tsl6zspIQg6rCv7IiYCiAgICAgIC8vIGJvb3RzdHJhcCAnYi10YWJsZScg7ZWE65OcIOyEpOyglQogICAgICBmaWVsZHM6IFt7CiAgICAgICAga2V5OiAiY29udGVudF9pZCIsCiAgICAgICAgbGFiZWw6ICLrsojtmLgiCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJ0aXRsZSIsCiAgICAgICAgbGFiZWw6ICLsoJzrqqkiCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICJ1c2VyX25hbWUiLAogICAgICAgIGxhYmVsOiAi6riA7JO07J20IgogICAgICB9LCB7CiAgICAgICAga2V5OiAiY3JlYXRlZF9hdCIsCiAgICAgICAgbGFiZWw6ICLsnpHshLHsnbwiCiAgICAgIH1dLAogICAgICBpdGVtczogaXRlbXMKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByb3dDbGljazogZnVuY3Rpb24gcm93Q2xpY2soaXRlbSkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogIi9ib2FyZC8iLmNvbmNhdChpdGVtLmNvbnRlbnRfaWQpCiAgICAgIH0pOwogICAgfSwKICAgIHdyaXRlQ29udGVudDogZnVuY3Rpb24gd3JpdGVDb250ZW50KCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogIi9Cb2FyZENyZWF0ZSIKICAgICAgfSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcm93czogZnVuY3Rpb24gcm93cygpIHsKICAgICAgcmV0dXJuIHRoaXMuaXRlbXMubGVuZ3RoOwogICAgfQogIH0KfTsgLy8gICBkYXRhICgpIHsKLy8gICAgIHJldHVybiB7Ci8vICAgICAgIHNlYXJjaFF1ZXJ5OiAnJywKLy8gICAgICAgcW5hQ29sdW1uczogWydxbmFfbm8nLCAncW5hX3RpdGxlJywgJ3FuYV91c2VyaWQnLCAncW5hX2RhdGV0aW1lJ10sCi8vICAgICAgIHFuYURhdGE6W10KLy8gICAgIH0KLy8gICB9LAovLyAgIGNyZWF0ZWQoKXsKLy8gICAgIHRoaXMubG9hZCgpCi8vICAgfSwKLy8gICBtZXRob2RzOnsKLy8gICAgIGxvYWQoKXsKLy8gICAgICAgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0Ojk5OTkvaGFwcHlob3VzZS9xbmFCb2FyZCcpCi8vICAgICAgIC50aGVuKHJlcyA9PiB7Ci8vICAgICAgICAgdGhpcy5ncmlkRGF0YSA9IHJlcy5kYXRhOwovLyAgICAgICB9KS5jYXRjaChlID0+IHsKLy8gICAgICAgICBjb25zb2xlLmVycm9yKGUpCi8vICAgICAgIH0pCi8vICAgICB9Ci8vICAgfQovLyB9"},{"version":3,"sources":["QnABoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA,OAAA,KAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,QAAA,YAAA,GAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,aAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA;AACA,KAFA,CAAA,CADA,CAGA;AAEA;;;AACA,QAAA,KAAA,GAAA,YAAA,CAAA,GAAA,CAAA,UAAA,WAAA,EAAA;AACA,6CACA,WADA;AAEA,QAAA,SAAA,EAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,UAAA,QAAA,EAAA;AACA,iBAAA,WAAA,CAAA,OAAA,KAAA,QAAA,CAAA,OAAA;AACA,SAFA,EAEA,CAFA,EAEA;AAJA;AAMA,KAPA,CAAA;AASA,WAAA;AACA,MAAA,WAAA,EAAA,CADA;AACA;AACA,MAAA,OAAA,EAAA,EAFA;AAEA;AACA;AACA,MAAA,MAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,YADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,GAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,GAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,GAAA,EAAA,YADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,CAJA;AAsBA,MAAA,KAAA,EAAA;AAtBA,KAAA;AAwBA,GAzCA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,mBAAA,IAAA,CAAA,UAAA;AADA,OAAA;AAGA,KALA;AAMA,IAAA,YANA,0BAMA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA;AADA,OAAA;AAGA;AAVA,GA1CA;AAsDA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA;AACA;AAHA;AAtDA,CAAA,C,CA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template>\n    <div class=\"qna mt-4\">\n        <div class=\"input-group mb-3 float-right w-25\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"어떤것이 궁금하세요??\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">\n            <div class=\"input-group-append\">\n                <b-button @click=\"searchContent\" >검색</b-button>\n            </div>\n        </div>\n        <b-table\n            striped\n            hover\n            :items=\"items\"\n            :per-page=\"perPage\"\n            :current-page=\"currentPage\"\n            :fields=\"fields\"\n            @row-clicked=\"rowClick\"\n        ></b-table>\n        <b-pagination v-model=\"currentPage\" :total-rows=\"rows\" :per-page=\"perPage\" align=\"center\"></b-pagination>\n        <div class=\"text-right\">\n          <b-button  @click=\"writeContent\">글쓰기</b-button>\n        </div>\n    </div>\n</template>\n\n<script>\n//import axios from 'axios'\nimport data from '@/data'\nexport default {\n  name: 'QnABoard',\n  data() {\n  let contentItems = data.Content.sort((a, b) => {\n      return b.content_id - a.content_id;\n    }); // 내림차순\n\n    // User 와 Content 의 user_id 의 같은 번호를 찾아 Content 에 기존자료 + 'user_name' 으로 추가한다.\n    let items = contentItems.map(contentItem => {\n      return {\n        ...contentItem,\n        user_name: data.User.filter(userItem => {\n          return contentItem.user_id === userItem.user_id;\n        })[0].name\n      };\n    });\n\n    return {\n      currentPage: 1, // 현재 페이지\n      perPage: 10, // 페이지당 보여줄 갯수\n      // bootstrap 'b-table' 필드 설정\n      fields: [\n        {\n          key: \"content_id\",\n          label: \"번호\"\n        },\n        {\n          key: \"title\",\n          label: \"제목\"\n        },\n        {\n          key: \"user_name\",\n          label: \"글쓴이\"\n        },\n        {\n          key: \"created_at\",\n          label: \"작성일\"\n        }\n      ],\n      items: items\n    };\n  },\n  methods: {\n    rowClick(item) {\n      this.$router.push({\n        path: `/board/${item.content_id}`\n      });\n    },\n    writeContent() {\n      this.$router.push({\n        path: `/BoardCreate`\n      });\n    }\n  },\n  computed: {\n    rows() {\n      return this.items.length;\n    }\n  }\n};\n//   data () {\n//     return {\n//       searchQuery: '',\n//       qnaColumns: ['qna_no', 'qna_title', 'qna_userid', 'qna_datetime'],\n//       qnaData:[]\n//     }\n//   },\n//   created(){\n//     this.load()\n//   },\n//   methods:{\n//     load(){\n//       axios.get('http://localhost:9999/happyhouse/qnaBoard')\n//       .then(res => {\n//         this.gridData = res.data;\n//       }).catch(e => {\n//         console.error(e)\n//       })\n//     }\n//   }\n// }\n</script>\n"],"sourceRoot":"src/components/board"}]}